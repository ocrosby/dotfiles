#!/bin/zsh

# dotfiles/shell/.zsh.setup

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ Logging Setup ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

LOG_DATE=$(date +%F)
LOGFILE="$HOME/.zsh.setup.$LOG_DATE.log"

timestamp() { date +%F\ %T; }

log() {
  echo "$(timestamp) - $1" | tee -a "$LOGFILE"
}

have() { command -v "$1" >/dev/null 2>&1; }

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ Installer ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

install_if_missing() {
  local cmd="$1"
  local brew_pkg="${2:-$1}"
  if ! have "$cmd"; then
    log "üì¶ Installing $brew_pkg..."
    if brew install "$brew_pkg" >/dev/null 2>&1; then
      log "‚úÖ Installed $brew_pkg"
    else
      log "‚ùå Failed to install $brew_pkg"
    fi
  elif [ "$DOTFILES_VERBOSE" = true ]; then
    log "‚ÑπÔ∏è $cmd is already installed."
  fi
}

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ Repo Cloner ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

clone_if_missing() {
  local name="$1"
  local repo="$2"
  local path="$HOME/.config/nvim-$name"
  if [ ! -d "$path" ]; then
    log "üå± Cloning $name from $repo..."
    if git clone "$repo" "$path" >/dev/null 2>&1; then
      log "‚úÖ Cloned $name to $path"
    else
      log "‚ùå Failed to clone $name"
    fi
  elif [ "$DOTFILES_VERBOSE" = true ]; then
    log "‚ÑπÔ∏è $name already exists at $path"
  fi
}

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ Execution Begins ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ Neovim Configs ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

clone_if_missing "kickstart" "https://github.com/nvim-lua/kickstart.nvim.git"
clone_if_missing "astro"     "https://github.com/AstroNvim/AstroNvim.git"
clone_if_missing "chad"      "https://github.com/NvChad/NvChad.git"
clone_if_missing "lunar"     "https://github.com/LunarVim/LunarVim.git"
clone_if_missing "lazy"      "https://github.com/LazyVim/LazyVim.git"
clone_if_missing "personal"  "https://github.com/ocrosby/nvim.git"
clone_if_missing "yoda"      "https://github.com/jedi-knights/yoda.nvim.git"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ CLI Tools ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

install_if_missing wget
install_if_missing rg ripgrep
install_if_missing php
install_if_missing cargo rust
install_if_missing julia
install_if_missing go
install_if_missing composer
install_if_missing fd
install_if_missing tree
install_if_missing viu
install_if_missing chafa
install_if_missing fzf
install_if_missing hg
install_if_missing just
#install_if_missing rust
#install_if_missing nvm

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ NVM Setup ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

if ! have nvim; then
  log "üì¶ Installing nvm..."
  if brew install neovim >/dev/null 2>&1; then
    log "‚úÖ Installed nvm"
  else
    log "‚ùå Failed to install nvm"
  fi
fi

mkdir -p "$NVM_DIR"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && source "/opt/homebrew/opt/nvm/nvm.sh"
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && source "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"

